[gd_scene load_steps=3 format=3 uid="uid://q8kvka2ch8ek"]

[sub_resource type="GDScript" id="GDScript_jd00v"]
script/source = "extends Area3D

@onready var ray = $RayCast3D
@export var root :Node3D
func _ready() -> void:
	pass # Replace with function body.
var time :=0.0
var scan :=false
func _physics_process(delta: float) -> void:
	time -=delta
	if time >0:
		return
	time = randf_range(0,0.5)
	scan = !scan
	if scan:
		scan_body()
	else:
		move_to_next_body()

@onready var overlapping_bodies := get_overlapping_bodies()
var body_count:=0
var iteration:=0
var body
func move_to_next_body():
	iteration+=1
	if iteration >= body_count:
		iteration = 0
		overlapping_bodies = get_overlapping_bodies()
		body_count = overlapping_bodies.size()
	if body_count <=0:
		body = null
		return
	body = overlapping_bodies[iteration]
	if body == null:
		return
	var body_pos = body.global_position
	ray.look_at(body_pos)

func scan_body():
	var collider = ray.get_collider()
	if body == null:
		return
	if collider == null:
		return
	if collider != body:
#		print(body.name +\" is covered by \"+collider.name)
		return
#	print(collider.name)
	root.emit_signal(\"detected\",body)
"

[sub_resource type="ConvexPolygonShape3D" id="ConvexPolygonShape3D_6ott6"]
points = PackedVector3Array(-0.000185728, -2, 1, -0.000185728, 0, 0, -0.5878, -2, 0.808927, 0.587615, -2, 0.808927, 0.950871, -2, 0.308927, 0.951057, -2, -0.309123, 0.587615, -2, -0.809123, -0.000185728, -2, -1, -0.5878, -2, -0.809123, -0.951056, -2, -0.309123, -0.951056, -2, 0.308927)

[node name="scanner" type="Area3D" node_paths=PackedStringArray("root")]
collision_layer = 0
collision_mask = 128
script = SubResource("GDScript_jd00v")
root = NodePath("../..")

[node name="cone shape" type="CollisionShape3D" parent="."]
transform = Transform3D(-1.5299e-07, -5, 0, 3.5, -2.18557e-07, 0, 0, 0, 3.5, 0, 0, 0)
shape = SubResource("ConvexPolygonShape3D_6ott6")

[node name="RayCast3D" type="RayCast3D" parent="."]
transform = Transform3D(-4.37114e-08, 0, -1, 0, 1, 0, 1, 0, -4.37114e-08, 0, 0, 0)
target_position = Vector3(0, 0, -10)
collision_mask = 129
debug_shape_custom_color = Color(1, 0, 0, 1)
debug_shape_thickness = 1
